/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 */

package com.microsoft.azure.management.storagesync.v2018_04_02.implementation;

import com.microsoft.azure.management.storagesync.v2018_04_02.CloudEndpoint;
import com.microsoft.azure.arm.model.implementation.CreatableUpdatableImpl;
import rx.Observable;

class CloudEndpointImpl extends CreatableUpdatableImpl<CloudEndpoint, CloudEndpointInner, CloudEndpointImpl> implements CloudEndpoint, CloudEndpoint.Definition, CloudEndpoint.Update {
    private final StorageSyncManager manager;
    private String resourceGroupName;
    private String storageSyncServiceName;
    private String syncGroupName;
    private String cloudEndpointName;

    CloudEndpointImpl(String name, StorageSyncManager manager) {
        super(name, new CloudEndpointInner());
        this.manager = manager;
        // Set resource name
        this.cloudEndpointName = name;
        //
    }

    CloudEndpointImpl(CloudEndpointInner inner, StorageSyncManager manager) {
        super(inner.name(), inner);
        this.manager = manager;
        // Set resource name
        this.cloudEndpointName = inner.name();
        // set resource ancestor and positional variables
        this.resourceGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "resourceGroups");
        this.storageSyncServiceName = IdParsingUtils.getValueFromIdByName(inner.id(), "storageSyncServices");
        this.syncGroupName = IdParsingUtils.getValueFromIdByName(inner.id(), "syncGroups");
        this.cloudEndpointName = IdParsingUtils.getValueFromIdByName(inner.id(), "cloudEndpoints");
        //
    }

    @Override
    public StorageSyncManager manager() {
        return this.manager;
    }

    @Override
    public Observable<CloudEndpoint> createResourceAsync() {
        CloudEndpointsInner client = this.manager().inner().cloudEndpoints();
        return client.createAsync(this.resourceGroupName, this.storageSyncServiceName, this.syncGroupName, this.cloudEndpointName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    public Observable<CloudEndpoint> updateResourceAsync() {
        CloudEndpointsInner client = this.manager().inner().cloudEndpoints();
        return client.createAsync(this.resourceGroupName, this.storageSyncServiceName, this.syncGroupName, this.cloudEndpointName, this.inner())
            .map(innerToFluentMap(this));
    }

    @Override
    protected Observable<CloudEndpointInner> getInnerAsync() {
        CloudEndpointsInner client = this.manager().inner().cloudEndpoints();
        return client.getAsync(this.resourceGroupName, this.storageSyncServiceName, this.syncGroupName, this.cloudEndpointName);
    }

    @Override
    public boolean isInCreateMode() {
        return this.inner().id() == null;
    }


    @Override
    public Boolean backupEnabled() {
        return this.inner().backupEnabled();
    }

    @Override
    public String friendlyName() {
        return this.inner().friendlyName();
    }

    @Override
    public String id() {
        return this.inner().id();
    }

    @Override
    public String lastOperationName() {
        return this.inner().lastOperationName();
    }

    @Override
    public String lastWorkflowId() {
        return this.inner().lastWorkflowId();
    }

    @Override
    public String name() {
        return this.inner().name();
    }

    @Override
    public String partnershipId() {
        return this.inner().partnershipId();
    }

    @Override
    public String provisioningState() {
        return this.inner().provisioningState();
    }

    @Override
    public String storageAccount() {
        return this.inner().storageAccount();
    }

    @Override
    public String storageAccountKey() {
        return this.inner().storageAccountKey();
    }

    @Override
    public String storageAccountResourceId() {
        return this.inner().storageAccountResourceId();
    }

    @Override
    public String storageAccountShareName() {
        return this.inner().storageAccountShareName();
    }

    @Override
    public String storageAccountTenantId() {
        return this.inner().storageAccountTenantId();
    }

    @Override
    public String type() {
        return this.inner().type();
    }

    @Override
    public CloudEndpointImpl withExistingSyncGroup(String resourceGroupName, String storageSyncServiceName, String syncGroupName) {
        this.resourceGroupName = resourceGroupName;
        this.storageSyncServiceName = storageSyncServiceName;
        this.syncGroupName = syncGroupName;
        return this;
    }

    @Override
    public CloudEndpointImpl withFriendlyName(String friendlyName) {
        this.inner().withFriendlyName(friendlyName);
        return this;
    }

    @Override
    public CloudEndpointImpl withLastOperationName(String lastOperationName) {
        this.inner().withLastOperationName(lastOperationName);
        return this;
    }

    @Override
    public CloudEndpointImpl withLastWorkflowId(String lastWorkflowId) {
        this.inner().withLastWorkflowId(lastWorkflowId);
        return this;
    }

    @Override
    public CloudEndpointImpl withPartnershipId(String partnershipId) {
        this.inner().withPartnershipId(partnershipId);
        return this;
    }

    @Override
    public CloudEndpointImpl withProvisioningState(String provisioningState) {
        this.inner().withProvisioningState(provisioningState);
        return this;
    }

    @Override
    public CloudEndpointImpl withStorageAccount(String storageAccount) {
        this.inner().withStorageAccount(storageAccount);
        return this;
    }

    @Override
    public CloudEndpointImpl withStorageAccountKey(String storageAccountKey) {
        this.inner().withStorageAccountKey(storageAccountKey);
        return this;
    }

    @Override
    public CloudEndpointImpl withStorageAccountResourceId(String storageAccountResourceId) {
        this.inner().withStorageAccountResourceId(storageAccountResourceId);
        return this;
    }

    @Override
    public CloudEndpointImpl withStorageAccountShareName(String storageAccountShareName) {
        this.inner().withStorageAccountShareName(storageAccountShareName);
        return this;
    }

    @Override
    public CloudEndpointImpl withStorageAccountTenantId(String storageAccountTenantId) {
        this.inner().withStorageAccountTenantId(storageAccountTenantId);
        return this;
    }

}
